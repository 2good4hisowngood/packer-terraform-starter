name: 'Master Workflow'

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
  ARM_CLIENT_SECRET: "${{ secrets.ARM_CLIENT_SECRET }}"
  tf_actions_working_dir: terraform/packer_build_infra

jobs:
  build-packer-infra:
    name: 'Build Packer Infrastructure'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    env:
      ARM_SKIP_PROVIDER_REGISTRATION: true
    defaults:
      run:
        working-directory: ${{ env.tf_actions_working_dir }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format
        run: terraform fmt

      - name: Terraform Plan
        id: tf-plan
        run: |
          export exitcode=0
          terraform plan -detailed-exitcode -no-color -out tfplan || export exitcode=$?

          echo "exitcode=$exitcode" >> $GITHUB_OUTPUT

          if [ $exitcode -eq 1 ]; then
            echo Terraform Plan Failed!
            exit 1
          else 
            exit 0
          fi

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

  packer-test:
    name: 'Packer Test'
    runs-on: ubuntu-latest
    needs: build-packer-infra
    env:
      PACKER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup `packer`
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: "latest"

      - name: Run `packer init`
        id: init
        run: "packer init packer/Test/."

      - name: Run `packer validate`
        id: validate
        run: "packer validate packer/Test/."

      - name: Run `packer build`
        id: build
        env:
          PKR_VAR_client_id: ${{ secrets.AZURE_CLIENT_ID }}
          PKR_VAR_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
          PKR_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          PKR_VAR_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          PKR_VAR_destination_image_version: "1.0.${{ github.run_number }}"
        run: "packer build packer/Test/."

  build-avd-infra:
    name: 'Build AVD Infrastructure'
    runs-on: ubuntu-latest
    needs: packer-test
    env:
      ARM_SKIP_PROVIDER_REGISTRATION: true
      tf_actions_working_dir: terraform/client_avd_env
    defaults:
      run:
        working-directory: ${{ env.tf_actions_working_dir }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format
        run: terraform fmt

      - name: Terraform Plan
        id: tf-plan
        run: |
          export exitcode=0
          terraform plan -detailed-exitcode -no-color -out tfplan || export exitcode=$?

          echo "exitcode=$exitcode" >> $GITHUB_OUTPUT

          if [ $exitcode -eq 1 ]; then
            echo Terraform Plan Failed!
            exit 1
          else 
            exit 0
          fi

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan